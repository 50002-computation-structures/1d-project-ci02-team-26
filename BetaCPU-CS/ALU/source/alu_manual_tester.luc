module alu_manual_tester#(
    CLK_FREQ ~ 1000 : CLK_FREQ > 0) 
(
    input clk,  // clock
    input rst,  // reset
    input io_button[5],
    input io_dip[3][8],
    output io_led[3][8],
    output io_segment[8],
    output io_select[4]
) {
    alu alu
    
    const SIZE=32
    
    always {
        // Initialisation
        alu.a = 0
        alu.b = 0
        
        // Inputs
        alu.a = io_dip[0]
        alu.b = io_dip[1]
        alu.alufn = io_dip[2][5:0]
        // ALUFN table:
        // 0x00: add
        // 0x01: subtract
        // 0x02: multiply
        // 0x18: AND
        // 0x1E: OR
        // 0x16: XOR
        // 0x1A: "A" or LDR
        // 0x20: Bit shift left
        // 0x21: Bit shift right
        // 0x23: Bit shift right with sign extension
        
        // Outputs, with flags zero, overflow and negative 
        io_led = {c{5h00, alu.z, alu.v, alu.n}, alu.out[SIZE-1:SIZE-8], alu.out[7:0]}
        io_segment = 0
        io_select = 4hF
    }
}