module instruction_rom #(
    WORDS = 16 // total instructions in this ROM
)(
    input addr[$clog2(WORDS)], // this ROM is WORD addressable
    output out[32],
output numinstr[10]
) {
    
    // Driver code, the bottommost instruction is the first instruction
    // CHECKOFF: write your own test instruction fulfilling the requirements written in the lab handout
    const INSTRUCTIONS = {    
    // 32h7BE3FFFB, // 0x010 BNE(R3, main, R31) 
    // 32h607F0020, // 0x00C LD(R31, 32, R3) 
    // 32h643F0020, // 0x008 ST(R1, 32, R31)   
    32h90811000, // 0x00C CMPEQ(R1, R2, R4) 10010000100000010001000000000000
    32h90610800, // 0x008 CMPEQ(R1, R1, R3) 10010000011000010000100000000000
    32hC05F0002, // 0x004 ADDC(Ra, literal, Rc) / ADDC(R31, 2, R2) --- main 11000000010111110000000000000010
    32hC03F0003 // 0x000 ADDC(Ra, literal, Rc) / ADDC(R31, 3, R1) --- main  11000000001111110000000000000011
    }
    
    const NUM_OF_INSTRUCTIONS = $width(INSTRUCTIONS,0) // compute how many instructions are there
    
    always {
        if (addr < NUM_OF_INSTRUCTIONS){ // check if addr < number of instructions before slicing the array
            out = INSTRUCTIONS[addr]
        }
        else{
            out = 0
        }
        numinstr = NUM_OF_INSTRUCTIONS
    }
}