module alchitry_top (
    input clk2,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led[8],          // 8 user controllable LEDs
    input usb_rx,            // USB->Serial input
    output usb_tx,           // USB->Serial output
    output io_led[3][8],     // LEDs on IO Shield
    output io_segment[8],        // 7-segment LEDs on IO Shield
    output io_select[4],        // Digit select on IO Shield
    input io_button[5],      // 5 buttons on IO Shield
    input io_dip[3][8]       // DIP switches on IO Shield
) {
    
    //===================== Signals =====================
    sig rst                 // reset signal
        
    //===================== Modules =====================
    fsm fsm(.clk(clk2), .rst(rst), .io_button(io_button), .io_dip(io_dip))
    
    //============= Clock Connection Block ==============
    // This block connects all devices initialised inside 
    // to the common system clock
    .clk(clk2) {
        // The reset conditioner is used to synchronize the reset signal to the FPGA
        // clock. This ensures the entire FPGA comes out of reset at the same time.
        reset_conditioner reset_cond
    }
    
    always {
        // Initialisation conditions
        reset_cond.in = ~rst_n  // input raw inverted reset signal
        rst = reset_cond.out    // conditioned reset
        led = 8h00              // turn non driven LEDs off
        usb_tx = usb_rx         // echo the serial data
        
        // Initialisation for I/O board
        io_led = 3x{ {8h00} }
        io_select = 4hF
        io_segment = 8h00
        
        // Outputs linked to the FSM
        led = fsm.led
        io_led = fsm.io_led
        io_segment = fsm.io_segment
        io_select = fsm.io_select
    }
}
